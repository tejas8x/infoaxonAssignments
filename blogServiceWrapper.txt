package blog.service.wrapper;

import com.liferay.blogs.model.BlogsEntry;
import com.liferay.blogs.service.BlogsEntryLocalService;
import com.liferay.blogs.service.BlogsEntryLocalServiceWrapper;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.ServiceWrapper;
import com.liferay.portal.kernel.servlet.taglib.ui.ImageSelector;

import java.util.Date;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

import blog.service.model.MetadataEntry;
import blog.service.service.MetadataEntryLocalService;
import blog.service.service.MetadataEntryLocalServiceUtil;
import blog.service.service.MetadataEntryService;
import blog.service.service.MetadataEntryServiceUtil;
import blog.service.service.persistence.MetadataEntryPersistence;

/**
 * @author Tejas Digambar Ghag
 */
@Component(immediate = true, property = {}, service = ServiceWrapper.class)
public class BlogServiceWrapper extends BlogsEntryLocalServiceWrapper {

	public BlogServiceWrapper() {
		super(null);
	}

	BlogsEntry blogsEntry = null;

	public BlogsEntry addEntry(String externalReferenceCode, long userId, String title, String subtitle,
			String urlTitle, String description, String content, Date displayDate, boolean allowPingbacks,
			boolean allowTrackbacks, String[] trackbacks, String coverImageCaption,
			ImageSelector coverImageImageSelector, ImageSelector smallImageImageSelector, ServiceContext serviceContext)
			throws PortalException {

		try {
			blogsEntry = super.addEntry(externalReferenceCode, userId, title, subtitle, urlTitle, description, content,
					displayDate, allowPingbacks, allowTrackbacks, trackbacks, coverImageCaption,
					coverImageImageSelector, smallImageImageSelector, serviceContext);

			long entryId = blogsEntry.getEntryId();
			MetadataEntryServiceUtil.updateBlogId(entryId);
			
			} catch (Exception e) {
			e.printStackTrace();
			}

		return blogsEntry;
	}

	@Reference(unbind = "-")
	protected void serviceSetter(BlogsEntryLocalService blogsEntryLocalService) {
		setWrappedService(blogsEntryLocalService);
	}

}