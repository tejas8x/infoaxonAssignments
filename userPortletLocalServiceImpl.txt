/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.service.user.service.impl;

import com.liferay.portal.aop.AopService;
import com.liferay.portal.kernel.json.JSONObject;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.service.user.model.NewUser;
import com.service.user.service.base.NewUserLocalServiceBaseImpl;

import org.osgi.service.component.annotations.Component;

/**
 * @author Brian Wing Shun Chan
 */
@Component(
	property = "model.class.name=com.service.user.model.NewUser",
	service = AopService.class
)
public class NewUserLocalServiceImpl extends NewUserLocalServiceBaseImpl {


	public static final Log _log = LogFactoryUtil.getLog(NewUser.class);

	public NewUser addNewUser(JSONObject newUserJsonObject) {
		 
		
		NewUser newUser = null;
		try {
			long newUserId = counterLocalService.increment();
			newUser = newUserPersistence.create(newUserId);
			newUser.setFirstName(newUserJsonObject.getString("firstName"));
			newUser.setMiddleName(newUserJsonObject.getString("middleName"));
			newUser.setLastName(newUserJsonObject.getString("lastName"));
		    newUser.setEmailAddress(newUserJsonObject.getString("emailAddress"));
			newUser.setMobileNumber(newUserJsonObject.getString("mobileNumber"));
			newUser.setDob(newUserJsonObject.getString("dob"));
			newUser.setCountry(newUserJsonObject.getString("country"));
			newUser.setState(newUserJsonObject.getString("state"));
			newUser.setCity(newUserJsonObject.getString("city"));
			newUser.setPincode(newUserJsonObject.getString("pincode"));
			newUser.setNationalId(newUserJsonObject.getString("nationalId"));
			
			newUserPersistence.update(newUser);
			
		}catch (Exception e) {
            _log.error(e , e);
        }

		
		return null;
	}

	@Override
	public NewUser getNewUser(int id) {
		// TODO Auto-generated method stub
		return null;
	}
	
	
	
}