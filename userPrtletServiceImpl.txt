/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.service.user.service.impl;

import com.liferay.portal.aop.AopService;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSONFactoryUtil;
import com.liferay.portal.kernel.json.JSONObject;
import com.liferay.portal.kernel.security.access.control.AccessControlled;
import com.service.user.model.NewUser;
import com.service.user.service.NewUserLocalServiceUtil;
import com.service.user.service.base.NewUserServiceBaseImpl;

import java.util.ArrayList;
import java.util.List;

import org.osgi.service.component.annotations.Component;

/**
 * @author Brian Wing Shun Chan
 */
@Component(
	property = {
		"json.web.service.context.name=mynewpractice",
		"json.web.service.context.path=NewUser"
	},
	service = AopService.class
)
public class NewUserServiceImpl extends NewUserServiceBaseImpl {
	
	@AccessControlled(guestAccessEnabled = true)
	public JSONObject getNewUserById (String  newUserId) throws PortalException {
		
		JSONObject jsonObject = null;
		NewUser user = NewUserLocalServiceUtil.getNewUser(Integer.parseInt(newUserId));
		jsonObject = JSONFactoryUtil.createJSONObject(user.toString());
		return jsonObject;
		
	}

	@Override
	public List<NewUser> getNewUsers(int startIndex, int lastIndex) {
		List<NewUser> newUsers = new ArrayList<NewUser>();
		newUsers = newUserLocalService.getNewUsers(startIndex, lastIndex);
		return newUsers;
	}

	@Override
	public int getNewUsersCount() {

		return newUserLocalService.getNewUsersCount();
	}
	
	
	
}